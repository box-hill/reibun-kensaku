{"version":3,"sources":["components/Loader.js","components/Results.js","components/History.js","firebase.js","App.js","index.js"],"names":["Loader","props","loading","className","Results","ExampleList","examples","map","example","index","explaination","onClick","search","id","undefined","parsedResults","length","result","text","start","searchedPhrase","end","href","link","target","icon","faLink","History","history","item","numResultsFormatted","process","firebaseConfig","apiKey","REACT_APP_FIREBASE_API","authDomain","REACT_APP_FIREBASE_AUTHDOMAIN","projectId","REACT_APP_FIREBASE_PROJECTID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGINGSENDERID","appId","REACT_APP_FIREBASE_APPID","firebase","initializeApp","Navbar","children","NavItem","initialLogin","herf","NavSearchBar","autoComplete","type","maxLength","placeholder","required","onChange","handleChange","faSearch","App","useState","setInitialLoginCheck","loggedIn","setLoggedIn","searchInput","setSearchInput","justSearched","setJustSearched","setParsedResults","setHistory","loadingSearch","setLoadingSearch","loadingHistory","setLoadingHistory","saveHistory","string","numResults","uniqueId","auth","currentUser","uid","time","Date","getTime","firestore","collection","doc","add","searchedOn","catch","error","console","retrieveHistory","retrievedSearches","localStorage","getItem","JSON","parse","Array","historyLen","i","pop","obj","objToArray","setItem","stringify","docRef","orderBy","get","then","querySnapshot","historyArray","forEach","data","push","idsToRemove","log","delete","localHistory","e","preventDefault","match","alert","setTimeout","searchString","replace","formattedNumberResults","url","fetch","mode","response","json","items","resultsObj","replaceTagInString","inputString","regexTag","RegExp","regexHTML","outputString","replaceAll","outputArray","resultObj","sentenceString","htmlSnippet","includes","htmlTitle","regex","removeHTMLtagsInString","extractedObject","sentence","hitIndex","indexOf","findIndexMarker","markers","punctuation","latestStartIndex","marker","markerIndex","earliestEndIndex","startIndex","endIndex","endIndexPunc","slice","extractSentence","fullSentence","parseResults","searchInformation","formattedTotalResults","useEffect","onAuthStateChanged","user","document","getElementById","focus","value","faGoogle","signOut","provider","GoogleAuthProvider","signInWithPopup","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b13707f7.chunk.js","sourcesContent":["function Loader(props) {\n    if(props.loading === true){\n        return (\n        <div className=\"spinner\">\n            <div className=\"bounce1\"></div>\n            <div className=\"bounce2\"></div>\n            <div className=\"bounce3\"></div>\n        </div>\n        );\n    }\n    else return null;\n}\n\nexport default Loader;","import Loader from './Loader';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\n\nfunction Results(props) {\n    const exampleList = [\n        {search: 'どうして海', explaination: 'Common multi-word phrases: '},\n        {search: '美味しくなくない', explaination: 'Japanese slang: '},\n        {search: 'ほんまに分からん', explaination: 'Dialect and slang: '},\n        {search: '処方せんなしで買え', explaination: 'Incomplete verb conjugation: '},\n        {search: 'グラスの数が足りない', explaination: 'Check for correct sentences: '},\n        {search: 'ガラスの数が足りない', explaination: 'Incorrect searches yield no results: '},\n    ]\n    function ExampleList(props){\n        return (<ul>\n            {props.examples.map((example, index) => {\n                return (\n                    <li key={index}><span>{example.explaination}</span><span className=\"example\" onClick={() => props.search(example.search)}>{example.search}</span></li>\n                );\n            })}\n        </ul>);\n    }\n    if(props.loading === true) {\n        return (\n        <div className='results-container'>\n            <div id='loader'>\n                <Loader loading={props.loading}/>\n            </div>\n        </div>);\n    }\n    if(props.parsedResults === undefined) {\n      return (\n        <div id='error-center' className='results-container'>\n          <div className='error-emoji'>(╯°□°)╯︵ ┻━┻</div>\n          <div>Can't find any matching sentences.</div>\n          <div>Try changing your search.</div>\n          <div className='error-jap'>フレーズに該当する例文が見つかりません。</div>\n          <div>フレーズを変更して検索してください。</div>\n        </div>\n      );\n    }\n    if(props.parsedResults === 'API key limit reached') {\n        return (\n            <div id='error-center' className='results-container'>\n              <div className='error-emoji'>(╯°□°)╯︵ ┻━┻</div>\n              <div>API Key limit Reached.</div>\n            </div>\n          );\n    }\n    if(props.parsedResults.length === 0){\n        return (\n            <div className='results-container' id=\"welcome-container\">\n            <article>\n                <div id=\"welcome-message\">例文検索へようこそ！</div>\n                <p>RK is a powerful Japanese sentence searcher. Unlike other traditional websites that use a dictionary API or database search, <b>RK generates sentences from the web</b>.</p>\n                <p>Yes! This means that articles, blogs and even your favourite celebrity's tweet all contribute to the example sentences generated. \n                    RK's biggest strength lies in its ability to <b> generate sentences from open ended phrases</b>, a feature not present in other sentence searchers.</p>\n                <p>Here's a few example searches to give you a taste of what RK can do.</p>\n                <ExampleList  search={props.search} examples={exampleList}/>\n            </article>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className='results-container'>\n                {props.parsedResults.map((result, index) => {\n                    if(result.text !== null){\n                        return (\n                        <div key={index} className='card'>\n                            <div className='card-text'>{result.start}<b>{result.searchedPhrase}</b>{result.end}</div>\n                            <a href={result.link} target=\"_blank\" className=\"icon\"><FontAwesomeIcon icon={faLink}/> </a>\n                        </div>)\n                    }\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Results;","import Loader from './Loader';\n\nfunction History(props) {\n    if(props.loading){\n      return (\n        <div className='history'>\n          <div id='loader'>\n            <Loader loading={props.loading}/>\n          </div>\n        </div>\n      );\n    }\n    if(props.history === null || props.history === undefined){\n      return  (\n        <div className='history'>\n          <div>Try searching something!</div>\n        </div>\n      );\n    }\n    if(props.history.length === 0) {\n      return  (\n        <div className='history'>\n          <div className='history-heading'>Recent searches</div>\n          <div className='history-table'></div>\n        </div>\n      );\n    }\n    if(props.history.length !== 0){\n      return (\n        <div className='history'>\n          <div className='history-heading'>Recent searches</div>\n          <div className='history-table'>\n            {props.history.map((item, index) => {\n              return (<div key={index} className='history-item' id={'past-search-'+index}>\n                <div>{item.text}</div>\n                <div className=\"num-results\">{item.numResultsFormatted} Matches</div>\n              </div>);\n            })}\n          </div>\n        </div>\n      );\n    }\n    return null;\n}\n\nexport default History;","import firebase from \"firebase/compat/app\";\nconst { REACT_APP_FIREBASE_API, REACT_APP_FIREBASE_AUTHDOMAIN, REACT_APP_FIREBASE_PROJECTID, REACT_APP_FIREBASE_STORAGEBUCKET, REACT_APP_FIREBASE_MESSAGINGSENDERID, REACT_APP_FIREBASE_APPID } = process.env;\n\nconst firebaseConfig = {\n    apiKey: REACT_APP_FIREBASE_API,\n    authDomain: REACT_APP_FIREBASE_AUTHDOMAIN,\n    projectId: REACT_APP_FIREBASE_PROJECTID,\n    storageBucket: REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: REACT_APP_FIREBASE_MESSAGINGSENDERID,\n    appId: REACT_APP_FIREBASE_APPID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n\n\n","\nimport './App.css';\n\nimport Results from './components/Results';\nimport History from './components/History';\nimport firebase from \"./firebase\";\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport React, { useState, useEffect } from 'react';\n\nconst { REACT_APP_GOOGLE_API } = process.env;\n\nfunction App() {\n\n  const [initialLogin, setInitialLoginCheck] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n  const [justSearched, setJustSearched] = useState(false);\n  const [parsedResults, setParsedResults] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [loadingHistory, setLoadingHistory] = useState(true);\n\n  // check if user is logged in\n  function checkUser(){\n    firebase.auth().onAuthStateChanged(function(user) {\n        if(user){\n            setLoggedIn(true);\n            retrieveHistory();   \n        } else { \n            setLoggedIn(false);\n            retrieveHistory();\n        }\n        setInitialLoginCheck(true);\n    })\n  }\n\n  useEffect(() => {\n    checkUser();\n    const searchBar = document.getElementById('focus');\n    searchBar.focus();\n  }, [])\n\n  useEffect(() => {\n    if(initialLogin) retrieveHistory();\n  }, [loggedIn]);\n  \n  // save history to cloud/localStorage and setState\n  function saveHistory(string, numResults){\n    // check if user is logged in, and then write to firestore to save user's search\n    if(loggedIn) {\n      const user = firebase.auth().currentUser;\n      const uniqueId = user.uid;\n\n      const date = new Date();\n      const time = date.getTime();\n      \n      const db = firebase.firestore(); // initialise your database\n      db.collection('users').doc(uniqueId).collection('searches').add({\n          text: string,\n          searchedOn: time,\n          numResultsFormatted: numResults,\n      })\n      .catch((error) => {\n          console.error(\"Error addin doc: \", error);\n      })        \n      retrieveHistory();\n    }\n    // read, update and save to local storage\n    else {\n      let justSearched = {text: string, numResultsFormatted: numResults};\n      let retrievedSearches = localStorage.getItem('pastSearches');\n      if(retrievedSearches === null){\n        retrievedSearches = [justSearched];\n      }\n      else {\n        retrievedSearches = JSON.parse(retrievedSearches);\n        if(!(retrievedSearches instanceof Array)){\n          retrievedSearches = [retrievedSearches, justSearched];\n        }\n        else {\n          retrievedSearches = [justSearched, ...retrievedSearches];\n          let historyLen = retrievedSearches.length;\n          if(historyLen > 15){\n            for(let i=15; i<historyLen; i++){\n              retrievedSearches.pop();\n            }\n          }\n        }\n      }\n      retrievedSearches = objToArray(retrievedSearches);\n      setHistory(retrievedSearches);\n      localStorage.setItem('pastSearches', JSON.stringify(retrievedSearches));\n    }\n  }     \n  function retrieveHistory(){\n    setLoadingHistory(true);\n    // check if user is logged in, and then retrieve History, setHistory, and also remove old searches\n    if(loggedIn){\n      const user = firebase.auth().currentUser;\n      const uniqueId = user.uid;\n\n      const db = firebase.firestore(); // initialise your database\n      const docRef = db.collection('users').doc(uniqueId).collection('searches');\n\n      docRef.orderBy(\"searchedOn\", \"desc\").get()\n      .then((querySnapshot) => {\n        let historyArray = [];\n        querySnapshot.forEach((doc) => {\n          const obj = doc.data();\n          historyArray.push({id:doc.id, ...obj});\n        })\n        setHistory(historyArray);\n        // remove history that exceeds 15\n        const maxHistoryLength = 15;\n        let idsToRemove = [];\n        if(historyArray.length > maxHistoryLength) {\n          for(let i=maxHistoryLength; i<historyArray.length; i++){\n            console.log(historyArray);\n            idsToRemove.push(historyArray[i].id);\n          }\n          console.log('ids to remove: ', idsToRemove)\n          idsToRemove.forEach((id) => {\n            docRef.doc(id).delete();\n          })\n        }\n      })\n      .catch((error => {\n        console.log(\"Error getting documents: \", error);\n      }))\n      console.log('Retrieved Cloud History: ', history);\n    }\n    else {\n      let localHistory = localStorage.getItem('pastSearches');\n      localHistory = JSON.parse(localHistory);\n      if(localHistory === null || localHistory === undefined || localHistory[0] === null){\n        setHistory([]);\n        setLoadingHistory(false);\n        return;\n      }\n      setHistory(localHistory);\n      console.log('Retrieved Local History: ', localHistory);\n    }\n    setLoadingHistory(false);\n  }\n\n  function googleLogin() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider)\n        .then(result => {\n            const user = result.user;\n            console.log(user)\n        })\n        .catch(console.log);\n    retrieveHistory();\n  }\n\n  function logUserOut(){\n    const auth = firebase.auth();    \n    auth.signOut();\n    // refresh history, using history in local storage\n    retrieveHistory();\n  }\n\n  function search(e) {\n    if(typeof e !== 'string'){\n      e.preventDefault();\n      // exit search if search input does not have a single valid Japanese character, \n      const regex = /[\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff9f\\u4e00-\\u9faf\\u3400-\\u4dbf]/\n      if(searchInput.match(regex)===null){\n        alert('Search does not contain any Japanese!');\n        return;\n      }\n    }\n    \n    // only allow one search a second\n    if(justSearched) return; \n    setJustSearched(true);\n    setTimeout(() => setJustSearched(false), 1000);\n\n    setParsedResults([]); // erase previous results\n    setLoadingSearch(true); // mount loader\n\n    let searchString = '';\n    if(typeof e === 'string'){\n      searchString = e;\n    }\n    else{\n      searchString = searchInput.replace(/\\s/g, ''); // remove all spaces from user's search\n    }\n    let formattedNumberResults = 0;\n    let url = `https://www.googleapis.com/customsearch/v1?key=${REACT_APP_GOOGLE_API}&lr=lang_ja&cx=22519e5637b61b1c8&q=\\\"${searchString}\"`;\n    fetch(url, {mode: 'cors'})\n    .then((response) => {\n        return response.json();\n    })\n    .then((response) => {\n      console.log('search response: ', response);\n      if(response.error) {\n        setLoadingSearch(false);\n        setParsedResults('API key limit reached');\n        return;\n      }\n      // no results found:\n      if(response.items === undefined) {\n        setLoadingSearch(false);\n        setParsedResults(undefined);\n        saveHistory(searchString, '0');\n        return;\n      }\n      // The results with <b> tags contain the search term\n      // If neither the htmlSnippet or htmlTitle contains this, then the hit is likely a bad one\n      function parseResults(resultsObj) {\n        // replace all <b>...</b> tags with the keyword searched, &nbsp HTML entities; \n        function replaceTagInString(inputString){\n          const regexTag = new RegExp(`<b>.*</b>`, 'g');\n          const regexHTML = new RegExp(\"&nbsp;\", \"g\");\n          let outputString = inputString.replaceAll(regexTag, searchString);\n          outputString = outputString.replaceAll(regexHTML, \"…\");         \n          return outputString;\n        }\n        function removeDateInString(inputString){\n          // removes the result's date if it exists in the result\n          const regex = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{2}/g;\n          const outputString = inputString.replaceAll(regex, '');\n          return outputString;\n        }\n        function removeHTMLtagsInString(inputString){\n          let regex = /(<([^>]+)>)/ig;\n          let outputString = inputString.replaceAll(regex, '');\n          regex = /&.*;/g;\n          outputString = outputString.replaceAll(regex, '');\n          return outputString;\n        }\n        // extract sentence by estimating the start and end markers\n        function extractSentence(sentence){\n          let hitIndex = sentence.indexOf(searchString);\n          function findIndexMarker(string, markers, hitIndex, start=true, punctuation=false){\n            // to find the start of the sentence, find the latest marker before hitIndex\n            if(start){\n              let latestStartIndex = 0;\n              markers.forEach((marker) => {\n                let markerIndex = string.indexOf(marker) + 1; // don't include the punctuation at the start\n                latestStartIndex = ((markerIndex > latestStartIndex) && (markerIndex < hitIndex)) ? markerIndex : latestStartIndex;\n              });\n              return latestStartIndex;\n            }\n            else{ // find the earliest end of the sentence that is after the hitIndex\n              let earliestEndIndex = string.length;\n              markers.forEach((marker) => {\n                let markerIndex = punctuation ? string.indexOf(marker) + 1 : string.indexOf(marker); // include the punctuation if needed\n                earliestEndIndex = ((markerIndex < earliestEndIndex) && (markerIndex > hitIndex)) ? markerIndex : earliestEndIndex;\n              });\n              return earliestEndIndex;\n            }\n          }\n          let startMarkers = [\".\", \";\", \"。\", \"…\", \"？\", \"?\", \"|\",\"｜\",\"！\",\"!\",\"→\"];\n          let endMarkers = [\";\",\"|\",\"｜\",\"→\",\"【\", \"&\"];\n          let endMarkersPunc= [\".\", \"。\", \"…\", \"？\", \"?\",\"！\",\"!\"];\n\n          let startIndex = findIndexMarker(sentence, startMarkers, hitIndex, true);\n          let endIndex = findIndexMarker(sentence, endMarkers, hitIndex, false);\n          let endIndexPunc = findIndexMarker(sentence, endMarkersPunc, hitIndex, false, true);\n\n          endIndex = (endIndexPunc < endIndex) ? endIndexPunc : endIndex;\n          return {\n            text: sentence.slice(startIndex, endIndex), \n            start: sentence.slice(startIndex, hitIndex),\n            searchedPhrase: searchString,\n            end: sentence.slice(hitIndex + searchString.length, endIndex)\n          };\n        }\n        let outputArray = [];\n        // Add text and link property from our results\n        resultsObj.forEach(resultObj => {\n          let sentenceString = '';\n          if(resultObj.htmlSnippet.includes(\"<b>\")){\n            sentenceString = replaceTagInString(resultObj.htmlSnippet);\n              //outputArray = [...outputArray, {text: replaceTagInString(resultObj.htmlSnippet), link: resultObj.link}];\n          }\n          else if(resultObj.htmlTitle.includes(\"<b>\")){\n            sentenceString = replaceTagInString(resultObj.htmlTitle);\n          }\n          else {\n            sentenceString = null;\n            outputArray = [...outputArray, {text: null}]\n            return;\n          }              \n          // Remove post date in sentence and extract sentence\n          sentenceString = removeDateInString(sentenceString);\n          sentenceString = removeHTMLtagsInString(sentenceString);\n          let extractedObject = extractSentence(sentenceString);\n\n          const fullSentence = extractedObject.text\n          const start = extractedObject.start;\n          const searchedPhrase = extractedObject.searchedPhrase;\n          const end = extractedObject.end;\n\n          outputArray = [...outputArray, {\n            text: fullSentence, \n            start: start, \n            searchedPhrase: searchedPhrase, \n            end: end, \n            link: resultObj.link\n          }];\n        });\n        console.log(outputArray);          \n        return outputArray;\n      }\n      setParsedResults(parseResults(response.items));\n\n      formattedNumberResults = response.searchInformation.formattedTotalResults\n      setLoadingSearch(false);\n\n      saveHistory(searchString, formattedNumberResults);\n    })\n    .catch((error) => {\n        console.log(error);\n    });     \n  }\n\n  function handleChange(e) {\n    setSearchInput(e.target.value);\n  }\n\n  return (\n    <div className='app'>\n      <Navbar>\n        <div className=\"nav-search\">\n          <NavSearchBar search={search} handleChange={handleChange}/>\n        </div>\n        <div className=\"nav-items\">\n          {loggedIn ? <NavItem text=\"Sign out\" icon={faGoogle} onClick={logUserOut} initialLogin={initialLogin}></NavItem> : \n          <NavItem text=\"Sign in\" icon={faGoogle} onClick={googleLogin} initialLogin={initialLogin}></NavItem>}\n        </div>\n      </Navbar>\n      <div className='flex-center'>\n        <div className='main-content'>\n          <Results parsedResults={parsedResults} loading={loadingSearch} search={search}/>\n          <History loading={loadingHistory} loggedIn={loggedIn} history={history}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction objToArray(obj) {\n  if(obj instanceof Array || obj === null) {\n    return obj;\n  }\n  return [obj];\n}\n\nfunction Navbar(props) {\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-nav\"> { props.children }</ul>\n    </nav>\n  );\n}\n\nfunction NavItem(props) {\n  if(!props.initialLogin) return null;\n  return (\n    <li className=\"nav-item\">\n      <button herf=\"#\" className=\"nav-button\" onClick={props.onClick}>\n        <div className=\"text-button\"><FontAwesomeIcon icon={props.icon}/>{props.text}</div>\n      </button>\n    </li>\n  );\n}\n\nfunction NavSearchBar(props) {\n  return (\n    <form autoComplete=\"off\">\n    <input type=\"text\" maxLength=\"15\" placeholder=\"Search a phrase...\" required\n    autoComplete=\"false\" className=\"nav-search-bar\" id=\"focus\"\n    onChange={props.handleChange}>\n    </input>\n    <button className=\"nav-search-bar-button\" onClick={props.search}><FontAwesomeIcon icon={faSearch}/></button>\n    </form>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}